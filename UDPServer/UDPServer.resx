<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        AAABAAEAICAAAAEAIACoEAAAFgAAACgAAAAgAAAAQAAAAAEAIAAAAAAAABAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAACsrKyorKyvNKysr+SsrK6srKysOAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAALy8vACsr
        K2grKyvrKysr6ysrK2orKysAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAKysrDisrK60rKyv5KysrzSsr
        KyoAAAAAAAAAAAAAAAAvLy8ALCwsySwsLP8rKyv/LCws/ysrK50sLCxALCwsQCwsLEAsLCxALCwsQCws
        LEArKytYKysr+ywsLP8sLCz/Kysr/SwsLFgsLCxALCwsQCwsLEAsLCxALCwsQCwsLEAsLCydLCws/yws
        LP8sLCz/KysryS0tLQAAAAAAAAAAACsrKwQrKyvtLCws/ywsLP8sLCz/LCws+SwsLO0sLCztLCws7Sws
        LO0sLCztLCws7SwsLPEsLCz/LCws/ywsLP8sLCz/LCws8SwsLO0sLCztLCws7SwsLO0sLCztLCws7Sws
        LPksLCz/LCws/ywsLP8rKyvtKysrBAAAAAAAAAAAAAAAACsrK6MsLCz/LCws/ywsLP8rKytiLS0tBC0t
        LQQtLS0ELS0tBC0tLQQtLS0EKysrGCsrK+ssLCz/LCws/ysrK+0rKysYLS0tBC0tLQQtLS0ELS0tBC0t
        LQQtLS0EKysrYiwsLP8sLCz/LCws/ysrK6EAAAAAAAAAAAAAAAAAAAAAKysrCisrK3wrKyupKysrXikp
        KQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAKysrKisrK88rKyvRKysrLAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAsLCwAKysrXisrK6krKyt8KysrCgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAALCwslysrK5kAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAArKyuHKysriwAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAACws
        LAQsLCwEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAACsrKwwrKysgKysrICsrKyArKysgKysrICsrKyArKysgKysrICsr
        KyArKysgKysrICsrKyArKysgKysrICsrKyArKysgKysrICsrKyArKysgKysrICsrKyArKysgKysrDAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAArKytWLCws9SwsLP0sLCz9LCws/SwsLP0sLCz9LCws/Sws
        LP0sLCz9LCws/SwsLP0sLCz9LCws/SwsLP0sLCz9LCws/SwsLP0sLCz9LCws/SwsLP0sLCz9LCws/Ssr
        K/0rKyv1KysrWgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAACsrK9srKyt0LCwsFCwsLBQsLCwULCwsFCws
        LBQsLCwULCwsFCwsLBQsLCwULCwsFCwsLBQsLCwULCwsFCwsLBQsLCwULCwsFCwsLBQsLCwULCwsFCws
        LBQsLCwUKysrFCsrK3ArKyvfAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAALCws6ysrK0QAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAALCwsPisrK+8AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAsLCzrKysrRAAA
        AAAAAAAAAAAAACwsLAArKytyKysrJgAAAAAAAAAAAAAAAAAAAAArKytQKysrdisrK3YrKyt2Kysrdisr
        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
        //fv///37///9+++Affv///37///9+AAAAfn///n7///9+////fvvgD37///9+////fgAAAH4AAAB+//
        //fv///3774A9+////fv///35///5/AAAA8=
</value>
  </data>
</root>